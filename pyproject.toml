[tool.poetry]
name = "gokart"
version = "0.0.0"  # using poetry-dynamic-versioning
description="Gokart solves reproducibility, task dependencies, constraints of good code, and ease of use for Machine Learning Pipeline. [Documentation](https://gokart.readthedocs.io/en/latest/)"
authors = ["M3, inc."]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/m3dev/gokart"
repository = "https://github.com/m3dev/gokart"
documentation = "https://gokart.readthedocs.io/en/latest/"


[tool.poetry-dynamic-versioning]
enable = true
style = "pep440"
pattern = "^(?P<base>\\d+\\.\\d+\\.\\d+)"

[tool.poetry.dependencies]
python = ">=3.8,<3.12"
luigi = "*"
boto3 = {version = "*", optional = true}
slack-sdk = "^3"
pandas = "*"
numpy = "*"
tqdm = "*"
pyarrow = "*"
uritemplate = "*"
google-api-python-client = {version = "*", optional = true}
APScheduler = "*"
redis = "*"
matplotlib = "*"
pytest = "*"

[tool.poetry.group.dev.dependencies]
pyproject-flake8 = "5.0.4"
tox = "*"
moto = {version = "*", optional = true}
testfixtures = "*"
coverage = "*"
isort = "^5.7"
yapf = ">=0.32"
toml = "*"
lupa = "*"
fakeredis = "*"
mypy = "*"
types-redis = "*"

[tool.pytest.ini_options]
addopts = "--strict-markers"
testpaths = "test"
markers = [
    "gcs",
    "s3",
]

[tool.flake8]
# B006: Do not use mutable data structures for argument defaults. They are created during function definition time. All calls to the function reuse this one instance of that data structure, persisting changes between them.
# B008 Do not perform function calls in argument defaults.  The call is performed only once at function definition time. All calls to your function will reuse the result of that definition-time function call.  If this is intended, assign the function call to a module-level variable and use that variable as a default value.
# W503 line break before binary operator. We use W504(line break after binary operator) rather than W503
ignore = "B006,B008,W503"
max-line-length = 160
exclude = "venv/*,tox/*"

[tool.yapf]
based_on_style = "pep8"
column_limit = 160

[tool.yapfignore]
ignore_patterns = [
  ".venv/*",
  ".tox/*",
  "examples/*"
]

[tool.isort]
line_length = 160

[tool.mypy]
ignore_missing_imports = true

[build-system]
requires = ["poetry"]
build-backend = "poetry.masonry.api"
